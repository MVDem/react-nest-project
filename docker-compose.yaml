version: '3.9'

services:
  #client:
  #  container_name: client
  #  build:
  #    context: client
  #    dockerfile: Dockerfile
  #  command: npm run start
  #  ports:
  #    - 3000:3000
  #  networks:
  #    - shared-network
  # restart: unless-stopped

  api:
    container_name: api
    build:
      context: api
      dockerfile: Dockerfile
    env_file:
      - ./api/.development.env
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - 5000:5000
    command: npm run start:dev
    depends_on:
      - postgres
    restart: always
    networks:
      - shared-network

  postgres:
    container_name: postgres
    image: postgres:12
    env_file:
      - ./api/.development.env
    environment:
      POSTGRES_HOST_AUTH_METHOD: 'trust'
      PG_DATA: /var/lib/postgresql/data
    # ports:
    #   - 5433:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - shared-network

  #pgadmin:
  #  container_name: pgadmin4
  #  image: dpage/pgadmin4
  #  environment:
  #    PGADMIN_DEFAULT_EMAIL: 'admin@mail.ru'
  #    PGADMIN_DEFAULT_PASSWORD: 'root'
  #  ports:
  #    - '5050:80'
  #  depends_on:
  #    - postgres
  #  networks:
  #    - shared-network

volumes:
  pgdata:

networks:
  shared-network:
